// <auto-generated />
using System.Collections.Generic;
using BotDiscord.Infra.Dados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BotDiscord.Infra.Dados.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BotDiscord.Dominio.Entidades.BotDominio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<List<int>>("Days")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<bool>("Execute")
                        .HasColumnType("boolean");

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.Property<List<string>>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("Bots");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 728,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  Bom dia, Pessoal! ☀️ Bora bater ponto ⏰" }
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 758,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  Daily vai começar em breve... https://meet.jit.si/ClassJokers" }
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 800,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  Quem estiver em **chamados** dá uma olhada se o **Monitor Reinf** no servidor está 🆗" }
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1148,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Anderson Silva#8777 ** ) bater ponto ⏰ - Saída para o almoço" }
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1158,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Catarina Saville#4042**, **@Rafael Miranda#8211** e **@Paulo Gustavo Lacerda#6849** ) bater ponto ⏰ - Saída para o almoço" }
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1228,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Ana Paula Barony#3212** ) bater ponto ⏰ - Saída para o almoço" }
                        },
                        new
                        {
                            Id = 7L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1248,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Anderson Silva#8777 ** ) bater ponto ⏰ - Volta do almoço" }
                        },
                        new
                        {
                            Id = 8L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1258,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Catarina Saville#4042**, **@Rafael Miranda#8211** e **@Paulo Gustavo Lacerda#6849** ) bater ponto ⏰ - Volta do almoço" }
                        },
                        new
                        {
                            Id = 9L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1258,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Vladimir Lara#2790** e ** @tarcisia.luciano#8800** ) bater ponto ⏰ - Saída para o almoço" }
                        },
                        new
                        {
                            Id = 10L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1328,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Ana Paula Barony#3212** ) bater ponto ⏰ - Volta do almoço" }
                        },
                        new
                        {
                            Id = 11L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1358,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  ( **@Vladimir Lara#2790** e ** @tarcisia.luciano#8800** ) bater ponto ⏰ - Volta do almoço" }
                        },
                        new
                        {
                            Id = 12L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1415,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  **@Catarina Saville#4042**, **@Rafael Miranda#8211** e **@Paulo Gustavo Lacerda#6849**, hora boa pra **atualizar o pace** e/ou **movimentar tarefas** 👍" }
                        },
                        new
                        {
                            Id = 13L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1428,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  **@Catarina Saville#4042**, **@Rafael Miranda#8211** e **@Paulo Gustavo Lacerda#6849**, por hoje é só! Não esqueçam de bater ponto ⏰" }
                        },
                        new
                        {
                            Id = 14L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1648,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  Final do dia chegando, hora boa pra **atualizar o pace** e/ou **movimentar tarefas** 👍" }
                        },
                        new
                        {
                            Id = 15L,
                            Active = true,
                            Days = new List<int> { 1, 2, 3, 4, 5 },
                            Execute = true,
                            Hours = 1658,
                            Message = new List<string> { "🤖 **⚠️ ATENÇÃO ⚠️**  Até amanhã, Pessoal! Não esqueçam de bater ponto ⏰", "🤖 **⚠️ ATENÇÃO ⚠️**  Bom final de semana, Pessoal! Não esqueçam de bater ponto ⏰" }
                        });
                });

            modelBuilder.Entity("BotDiscord.Dominio.Entidades.ConfigDominio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("ExecutablePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Headless")
                        .HasColumnType("boolean");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("TimeoutClose")
                        .HasColumnType("integer");

                    b.Property<string>("UserDataDir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Configuracao");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Channel = "https://discord.com/channels/704737085126475776/763005091997286420",
                            ExecutablePath = "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
                            Headless = false,
                            Height = 1000,
                            TimeoutClose = 5000,
                            UserDataDir = "C:\\Users\\andersono\\AppData\\Local\\Google\\Chrome\\User Data\\Default",
                            Width = 800
                        });
                });

            modelBuilder.Entity("BotDiscord.Dominio.Entidades.DiaDominio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Dias");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Descricao = "Domingo"
                        },
                        new
                        {
                            Id = 2L,
                            Descricao = "Segunda-feira"
                        },
                        new
                        {
                            Id = 3L,
                            Descricao = "Terça-feira"
                        },
                        new
                        {
                            Id = 4L,
                            Descricao = "Quarta-feira"
                        },
                        new
                        {
                            Id = 5L,
                            Descricao = "Quita-feira"
                        },
                        new
                        {
                            Id = 6L,
                            Descricao = "Sexta-feira"
                        },
                        new
                        {
                            Id = 7L,
                            Descricao = "Sábado"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
